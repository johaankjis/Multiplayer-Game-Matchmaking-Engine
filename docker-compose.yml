version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: matchmaking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - matchmaking-network
    restart: unless-stopped

  matchmaking-engine:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: matchmaking-engine
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_REDIS_HOST=redis
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-key-in-production}
      - JAVA_OPTS=-Xmx512m -Xms256m
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - matchmaking-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis Commander for Redis management UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - matchmaking-network
    profiles:
      - debug

volumes:
  redis-data:
    driver: local

networks:
  matchmaking-network:
    driver: bridge
